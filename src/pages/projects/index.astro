---
import { Image } from 'astro:assets'

import PageLayout from '@/layouts/CommonPage.astro'
import ProjectCard from '@/components/home/ProjectCard.astro'
import GitHubRepoCard from '@/components/home/GitHubRepoCard.astro'
import config from '@/site-config'

const headings = [
  { depth: 2, slug: 'browser-extensions', text: 'Browser Extensions' },
  { depth: 2, slug: 'ctf-security', text: 'CTF & Security' },
  { depth: 2, slug: 'academic', text: 'Academic / Research' },
  { depth: 2, slug: 'backend', text: 'Backend' },
  { depth: 2, slug: 'web-applications', text: 'Web Applications' },
  { depth: 2, slug: 'others', text: 'Others' },
  { depth: 2, slug: 'github-repositories', text: 'GitHub Repositories' }
]

// Fetch GitHub repositories server-side
interface GitHubRepo {
  name: string
  description: string | null
  html_url: string
  stargazers_count: number
  forks_count: number
  language: string | null
  updated_at: string
  topics: string[]
}

const fetchGitHubRepos = async (): Promise<GitHubRepo[]> => {
  try {
    const username = 'juliancasaburi'
    let allRepos: GitHubRepo[] = []
    let page = 1
    let hasMore = true

    while (hasMore) {
      const response = await fetch(
        `https://api.github.com/users/${username}/repos?page=${page}&per_page=100&sort=updated`,
        {
          headers: {
            'User-Agent': 'astro-theme-pure'
          }
        }
      )
      
      if (!response.ok) {
        throw new Error(`Failed to fetch repositories: ${response.status}`)
      }

      const repos: GitHubRepo[] = await response.json()
      
      if (repos.length === 0) {
        hasMore = false
      } else {
        allRepos = [...allRepos, ...repos]
        page++
      }
    }

    // Sort by stars (descending) and return top repositories
    return allRepos.sort((a, b) => b.stargazers_count - a.stargazers_count)
  } catch (error) {
    console.error('Error fetching GitHub repositories:', error)
    return []
  }
}

const githubRepos = await fetchGitHubRepos()
const reposPerPage = 4
---

<PageLayout title='Projects' {headings} info={{ slug: '/projects', hideComment: true }}>
  <p>Github Activity:</p>
  <p>
    <Image
      src='https://ghchart.rshah.org/659eb9/juliancasaburi'
      alt='github activity'
      inferSize
      loading='lazy'
    />
  </p>
  <p>
    Feel free to explore my repositories and reach out if you’d like to connect, collaborate, or
    simply have a chat about anything tech-related!
  </p>

  <h2 id='browser-extensions'>Browser Extensions</h2>
  <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-8 px-2'>
    <ProjectCard
      href='https://github.com/juliancasaburi/siu-guarani-promedio-extension'
      heading='SIU-Guaraní promedio'
      subheading="Extension for Chromium and Firefox-based browsers that restores discontinued features of my university's student portal using client-side enhancements."
      imagePath='/src/assets/projects/siu-guarani-extension.gif'
    />
  </div>

  <h2 id='ctf-security'>CTF & Security</h2>
  <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-8 px-2'>
    <ProjectCard
      href='https://github.com/juliancasaburi/irisctf-2024'
      heading='IRIS CTF 2024'
      subheading="Writeups & automated solve scripts for IrisSec's Capture The Flag competition."
      imagePath='/src/assets/projects/irisctf-2024.png'
    />
    <ProjectCard
      href='https://github.com/juliancasaburi/pointeroverflowctf-2023'
      heading='Pointer Overflow CTF 2023'
      subheading='Writeups & automated solve scripts for POCTF 2023, organized by University of Wisconsin - Stevens Point.'
      imagePath='/src/assets/projects/poctf-2023.png'
    />
  </div>

  <h2 id='academic'>Academic / Research</h2>
  <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-8 px-2'>
    <ProjectCard
      href='https://github.com/juliancasaburi/tesis-grado-lic-sistemas-unlp'
      heading='University Thesis'
      subheading='Migration from "Lambda" to "Monolith": rationale, patterns, and performance analysis'
      imagePath='/src/assets/projects/thesis.png'
    />
    <ProjectCard
      href='https://icwe2025.webengineering.org/conference-program/'
      heading='Accepted Paper - International Conference on Web Engineering 2025'
      subheading='Assessing the Migration from FaaS to IaaS: Cost, Performance, and Challenges in AWS'
      imagePath='/src/assets/projects/paper.png'
    />
  </div>

  <h2 id='backend'>Backend</h2>
  <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-8 px-2'>
    <ProjectCard
      href='https://github.com/juliancasaburi/bd2-promocion'
      heading='US Traffic Accidents Queries (PostgreSQL & MongoDB)'
      subheading='Spring - PostgreSQL - MongoDB - Docker Compose - US Traffic Accidents Dataset'
      imagePath='/src/assets/projects/us-accidents.png'
    />
    <ProjectCard
      href='https://github.com/MUnique/OpenMU'
      heading='OpenMU'
      subheading='Contributed to feature development and code style improvements to a server implementation for the MMORPG "MU Online".'
      imagePath='/src/assets/projects/openmu.png'
    />
  </div>

  <h2 id='web-applications'>Web Applications</h2>
  <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-8 px-2'>
    <ProjectCard
      href='https://github.com/juliancasaburi/dollar'
      heading='Dollar'
      subheading="Currency converter app: 'Official Dollar' to 'ARS (Pesos Argentinos)' & historic prices."
      imagePath='/src/assets/projects/dollar-calc.png'
    />
  </div>

  <h2 id='others'>Others</h2>
  <div class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-8 px-2'>
    <ProjectCard
      href='https://github.com/juliancasaburi/sistemas-y-organizaciones-bpm'
      heading='Business Process Model and Notation'
      subheading='Business Process Model created using Bizagi Modeler'
      imagePath='/src/assets/projects/bizagi-bpm.png'
    />
  </div>

  <h2 id='github-repositories'>GitHub Repositories</h2>
  <p class='text-muted-foreground mb-4'>
    Explore my GitHub repositories sorted by popularity.
  </p>

  <!-- Repositories container -->
  <div id='github-repos-container' class='grid grid-cols-1 gap-6 sm:grid-cols-2 mb-6 px-2'>
    {githubRepos.map((repo, index) => (
      <div 
        class={`repo-card ${index >= reposPerPage ? 'hidden' : ''}`} 
        data-repo-index={index}
      >
        <GitHubRepoCard repo={repo} />
      </div>
    ))}
  </div>

  <!-- Pagination -->
  {githubRepos.length > reposPerPage && (
    <div id='github-repos-pagination' class='flex items-center justify-center mb-8'>
      <div class="flex items-center justify-between w-full">
        <div class="flex items-center gap-2">
          <button 
            id="prev-page" 
            disabled
            class="px-4 py-2 text-sm font-medium text-muted-foreground bg-background border border-border rounded-lg hover:bg-muted hover:text-foreground disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            Previous
          </button>
          <span id="page-info" class="text-sm text-muted-foreground">
            Page 1 of {Math.ceil(githubRepos.length / reposPerPage)}
          </span>
          <button 
            id="next-page" 
            class="px-4 py-2 text-sm font-medium text-muted-foreground bg-background border border-border rounded-lg hover:bg-muted hover:text-foreground disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            Next
          </button>
        </div>
        <div id="repos-count" class="text-sm text-muted-foreground">
          Showing 1-{Math.min(reposPerPage, githubRepos.length)} of {githubRepos.length} repositories
        </div>
      </div>
    </div>
  )}
</PageLayout>

<script
  is:inline
  type='module'
  data-astro-rerun
  define:vars={{ npmCDN: config.npmCDN, walineServer: config.integ.waline.server }}
>
  const loadPageviewCount = async () => {
    const pageview = await import(`${npmCDN}/@waline/client@v3/dist/pageview.js`)
    pageview.pageviewCount({
      serverURL: walineServer,
      path: window.location.pathname
    })
  }

  await loadPageviewCount()
</script>

<!-- GitHub Repositories Script -->
<script define:vars={{ totalRepos: githubRepos.length, reposPerPage }}>
  let currentPage = 1
  const totalPages = Math.ceil(totalRepos / reposPerPage)
  
  function updatePagination() {
    const prevButton = document.getElementById('prev-page')
    const nextButton = document.getElementById('next-page')
    const pageInfo = document.getElementById('page-info')
    const reposCount = document.getElementById('repos-count')
    
    if (prevButton) {
      prevButton.disabled = currentPage === 1
    }
    
    if (nextButton) {
      nextButton.disabled = currentPage === totalPages
    }
    
    if (pageInfo) {
      pageInfo.textContent = `Page ${currentPage} of ${totalPages}`
    }
    
    if (reposCount) {
      const start = (currentPage - 1) * reposPerPage + 1
      const end = Math.min(currentPage * reposPerPage, totalRepos)
      reposCount.textContent = `Showing ${start}-${end} of ${totalRepos} repositories`
    }
  }
  
  function showCurrentPageRepos() {
    const allRepoCards = document.querySelectorAll('.repo-card')
    const startIndex = (currentPage - 1) * reposPerPage
    const endIndex = startIndex + reposPerPage
    
    allRepoCards.forEach((card, index) => {
      if (index >= startIndex && index < endIndex) {
        card.classList.remove('hidden')
      } else {
        card.classList.add('hidden')
      }
    })
    
    updatePagination()
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    const prevButton = document.getElementById('prev-page')
    const nextButton = document.getElementById('next-page')
    
    if (prevButton) {
      prevButton.addEventListener('click', () => {
        if (currentPage > 1) {
          currentPage--
          showCurrentPageRepos()
        }
      })
    }
    
    if (nextButton) {
      nextButton.addEventListener('click', () => {
        if (currentPage < totalPages) {
          currentPage++
          showCurrentPageRepos()
        }
      })
    }
    
    // Initialize pagination state
    updatePagination()
  })
</script>

<style>
  /* Remove underlines from project cards and improve modern look */
  .project-card {
    text-decoration: none !important;
  }

  .project-card h2,
  .project-card p {
    text-decoration: none !important;
  }

  .project-card:hover h2 {
    text-decoration: none !important;
  }

  .project-card:visited,
  .project-card:visited h2,
  .project-card:visited p {
    text-decoration: none !important;
  }

  /* GitHub repo cards styling */
  .github-repo-card {
    text-decoration: none !important;
  }

  .github-repo-card *,
  .github-repo-card h3,
  .github-repo-card p,
  .github-repo-card span,
  .github-repo-card div {
    text-decoration: none !important;
  }

  .github-repo-card:hover,
  .github-repo-card:hover *,
  .github-repo-card:hover h3,
  .github-repo-card:hover p,
  .github-repo-card:hover span {
    text-decoration: none !important;
  }

  .github-repo-card:visited,
  .github-repo-card:visited *,
  .github-repo-card:visited h3,
  .github-repo-card:visited p,
  .github-repo-card:visited span {
    text-decoration: none !important;
  }

  .github-repo-card:focus,
  .github-repo-card:focus *,
  .github-repo-card:active,
  .github-repo-card:active * {
    text-decoration: none !important;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .sponsorship-card {
    & .sponsorship-card-img {
      opacity: 0.3;
      --un-blur: blur(4px);
      filter: var(--un-blur);
    }

    &:hover {
      & .sponsorship-card-icon {
        opacity: 0;
      }
      & .sponsorship-card-img {
        opacity: 1;
        --un-blur: blur(0);
      }
    }
  }
</style>
